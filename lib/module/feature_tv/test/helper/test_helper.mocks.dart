// Mocks generated by Mockito 5.0.16 from annotations
// in feature_tv/test/helper/test_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;
import 'dart:convert' as _i15;
import 'dart:typed_data' as _i16;

import 'package:core/core.dart' as _i5;
import 'package:core/data/models/watch_list_table.dart' as _i8;
import 'package:dartz/dartz.dart' as _i3;
import 'package:feature_tv/data/datasources/tv_local_data_source.dart' as _i14;
import 'package:feature_tv/data/datasources/tv_remote_data_source.dart' as _i9;
import 'package:feature_tv/data/models/tv_detail_model.dart' as _i2;
import 'package:feature_tv/data/models/tv_model.dart' as _i10;
import 'package:feature_tv/domain/entities/tv_detail_entities.dart' as _i13;
import 'package:feature_tv/domain/entities/tv_entities.dart' as _i12;
import 'package:feature_tv/domain/repositories/tv_repositories.dart' as _i11;
import 'package:http/http.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i7;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTvDetailModel_0 extends _i1.Fake implements _i2.TvDetailModel {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

class _FakeResponse_2 extends _i1.Fake implements _i4.Response {}

class _FakeStreamedResponse_3 extends _i1.Fake implements _i4.StreamedResponse {
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i5.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i7.Database?> get database => (super.noSuchMethod(
      Invocation.getter(#database),
      returnValue: Future<_i7.Database?>.value()) as _i6.Future<_i7.Database?>);
  @override
  _i6.Future<int> insertMovieWatchlist(_i8.WatchListTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertMovieWatchlist, [movie]),
          returnValue: Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<int> removeMovieWatchlist(_i8.WatchListTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeMovieWatchlist, [movie]),
          returnValue: Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i6.Future<Map<String, dynamic>?>);
  @override
  _i6.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i6.Future<List<Map<String, dynamic>>>);
  @override
  _i6.Future<int> insertTvShowWatchlist(_i8.WatchListTable? tvShow) =>
      (super.noSuchMethod(Invocation.method(#insertTvShowWatchlist, [tvShow]),
          returnValue: Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<int> removeTvShowWatchlist(_i8.WatchListTable? tvShow) =>
      (super.noSuchMethod(Invocation.method(#removeTvShowWatchlist, [tvShow]),
          returnValue: Future<int>.value(0)) as _i6.Future<int>);
  @override
  _i6.Future<Map<String, dynamic>?> getTvShowById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvShowById, [id]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i6.Future<Map<String, dynamic>?>);
  @override
  _i6.Future<List<Map<String, dynamic>>> getWatchlistTvShows() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvShows, []),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i6.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [TvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRemoteDataSource extends _i1.Mock
    implements _i9.TvRemoteDataSource {
  MockTvRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i10.TvModel>> getNowPlayingTvShows() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingTvShows, []),
              returnValue: Future<List<_i10.TvModel>>.value(<_i10.TvModel>[]))
          as _i6.Future<List<_i10.TvModel>>);
  @override
  _i6.Future<List<_i10.TvModel>> getPopularTvShows() =>
      (super.noSuchMethod(Invocation.method(#getPopularTvShows, []),
              returnValue: Future<List<_i10.TvModel>>.value(<_i10.TvModel>[]))
          as _i6.Future<List<_i10.TvModel>>);
  @override
  _i6.Future<List<_i10.TvModel>> getTopRatedTvShows() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTvShows, []),
              returnValue: Future<List<_i10.TvModel>>.value(<_i10.TvModel>[]))
          as _i6.Future<List<_i10.TvModel>>);
  @override
  _i6.Future<_i2.TvDetailModel> getDetailTvShows({String? tvId}) => (super
          .noSuchMethod(Invocation.method(#getDetailTvShows, [], {#tvId: tvId}),
              returnValue:
                  Future<_i2.TvDetailModel>.value(_FakeTvDetailModel_0()))
      as _i6.Future<_i2.TvDetailModel>);
  @override
  _i6.Future<List<_i10.TvModel>> getRecommendationTvShows({String? tvId}) =>
      (super.noSuchMethod(
              Invocation.method(#getRecommendationTvShows, [], {#tvId: tvId}),
              returnValue: Future<List<_i10.TvModel>>.value(<_i10.TvModel>[]))
          as _i6.Future<List<_i10.TvModel>>);
  @override
  _i6.Future<List<_i10.TvModel>> searchTvShows(String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvShows, [query]),
              returnValue: Future<List<_i10.TvModel>>.value(<_i10.TvModel>[]))
          as _i6.Future<List<_i10.TvModel>>);
}

/// A class which mocks [TvRepositories].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepositories extends _i1.Mock implements _i11.TvRepositories {
  MockTvRepositories() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i3.Either<_i5.Failure, List<_i12.TvEntities>>>
      getNowPlayingTvShows() => (super.noSuchMethod(
              Invocation.method(#getNowPlayingTvShows, []),
              returnValue:
                  Future<_i3.Either<_i5.Failure, List<_i12.TvEntities>>>.value(
                      _FakeEither_1<_i5.Failure, List<_i12.TvEntities>>()))
          as _i6.Future<_i3.Either<_i5.Failure, List<_i12.TvEntities>>>);
  @override
  _i6.Future<_i3.Either<_i5.Failure, List<_i12.TvEntities>>>
      getPopularTvShows() => (super.noSuchMethod(
              Invocation.method(#getPopularTvShows, []),
              returnValue:
                  Future<_i3.Either<_i5.Failure, List<_i12.TvEntities>>>.value(
                      _FakeEither_1<_i5.Failure, List<_i12.TvEntities>>()))
          as _i6.Future<_i3.Either<_i5.Failure, List<_i12.TvEntities>>>);
  @override
  _i6.Future<_i3.Either<_i5.Failure, List<_i12.TvEntities>>>
      getTopRatedTvShows() => (super.noSuchMethod(
              Invocation.method(#getTopRatedTvShows, []),
              returnValue:
                  Future<_i3.Either<_i5.Failure, List<_i12.TvEntities>>>.value(
                      _FakeEither_1<_i5.Failure, List<_i12.TvEntities>>()))
          as _i6.Future<_i3.Either<_i5.Failure, List<_i12.TvEntities>>>);
  @override
  _i6.Future<_i3.Either<_i5.Failure, _i13.TvDetailEntities>> getDetailTvShows(
          {String? tvId}) =>
      (super.noSuchMethod(
              Invocation.method(#getDetailTvShows, [], {#tvId: tvId}),
              returnValue:
                  Future<_i3.Either<_i5.Failure, _i13.TvDetailEntities>>.value(
                      _FakeEither_1<_i5.Failure, _i13.TvDetailEntities>()))
          as _i6.Future<_i3.Either<_i5.Failure, _i13.TvDetailEntities>>);
  @override
  _i6.Future<_i3.Either<_i5.Failure, List<_i12.TvEntities>>>
      getRecommendationTvShows({String? tvId}) => (super.noSuchMethod(
              Invocation.method(#getRecommendationTvShows, [], {#tvId: tvId}),
              returnValue:
                  Future<_i3.Either<_i5.Failure, List<_i12.TvEntities>>>.value(
                      _FakeEither_1<_i5.Failure, List<_i12.TvEntities>>()))
          as _i6.Future<_i3.Either<_i5.Failure, List<_i12.TvEntities>>>);
  @override
  _i6.Future<_i3.Either<_i5.Failure, String>> saveWatchlist(
          _i13.TvDetailEntities? tvShow) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [tvShow]),
              returnValue: Future<_i3.Either<_i5.Failure, String>>.value(
                  _FakeEither_1<_i5.Failure, String>()))
          as _i6.Future<_i3.Either<_i5.Failure, String>>);
  @override
  _i6.Future<_i3.Either<_i5.Failure, String>> removeWatchlist(
          _i13.TvDetailEntities? tvShow) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tvShow]),
              returnValue: Future<_i3.Either<_i5.Failure, String>>.value(
                  _FakeEither_1<_i5.Failure, String>()))
          as _i6.Future<_i3.Either<_i5.Failure, String>>);
  @override
  _i6.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  _i6.Future<_i3.Either<_i5.Failure, List<_i12.TvEntities>>>
      getWatchlistTvShows() => (super.noSuchMethod(
              Invocation.method(#getWatchlistTvShows, []),
              returnValue:
                  Future<_i3.Either<_i5.Failure, List<_i12.TvEntities>>>.value(
                      _FakeEither_1<_i5.Failure, List<_i12.TvEntities>>()))
          as _i6.Future<_i3.Either<_i5.Failure, List<_i12.TvEntities>>>);
  @override
  _i6.Future<_i3.Either<_i5.Failure, List<_i12.TvEntities>>> searchTvShows(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#searchTvShows, [query]),
              returnValue:
                  Future<_i3.Either<_i5.Failure, List<_i12.TvEntities>>>.value(
                      _FakeEither_1<_i5.Failure, List<_i12.TvEntities>>()))
          as _i6.Future<_i3.Either<_i5.Failure, List<_i12.TvEntities>>>);
}

/// A class which mocks [TvLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvLocalDataSource extends _i1.Mock implements _i14.TvLocalDataSource {
  MockTvLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<String> insertWatchlist(_i8.WatchListTable? tvShow) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [tvShow]),
          returnValue: Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<String> removeWatchlist(_i8.WatchListTable? tvShow) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [tvShow]),
          returnValue: Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<_i8.WatchListTable?> getTvShowById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvShowById, [id]),
              returnValue: Future<_i8.WatchListTable?>.value())
          as _i6.Future<_i8.WatchListTable?>);
  @override
  _i6.Future<List<_i8.WatchListTable>> getWatchlistTvShows() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistTvShows, []),
          returnValue: Future<List<_i8.WatchListTable>>.value(
              <_i8.WatchListTable>[])) as _i6.Future<List<_i8.WatchListTable>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i4.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: Future<_i4.Response>.value(_FakeResponse_2()))
          as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: Future<_i4.Response>.value(_FakeResponse_2()))
          as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i15.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i4.Response>.value(_FakeResponse_2()))
          as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i15.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i4.Response>.value(_FakeResponse_2()))
          as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i15.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i4.Response>.value(_FakeResponse_2()))
          as _i6.Future<_i4.Response>);
  @override
  _i6.Future<_i4.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i15.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i4.Response>.value(_FakeResponse_2()))
          as _i6.Future<_i4.Response>);
  @override
  _i6.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i6.Future<String>);
  @override
  _i6.Future<_i16.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: Future<_i16.Uint8List>.value(_i16.Uint8List(0)))
          as _i6.Future<_i16.Uint8List>);
  @override
  _i6.Future<_i4.StreamedResponse> send(_i4.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue:
                  Future<_i4.StreamedResponse>.value(_FakeStreamedResponse_3()))
          as _i6.Future<_i4.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
}
